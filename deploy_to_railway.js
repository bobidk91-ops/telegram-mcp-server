import axios from 'axios';
import { execSync } from 'child_process';
import fs from 'fs';

// –î–µ–ø–ª–æ–π –Ω–∞ Railway —á–µ—Ä–µ–∑ API
async function deployToRailway() {
  console.log('üöÇ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ Railway...\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Railway CLI
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Railway CLI...');
    try {
      const railwayVersion = execSync('npx @railway/cli@latest --version', { encoding: 'utf8' });
      console.log('‚úÖ Railway CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', railwayVersion.trim());
    } catch (error) {
      console.log('‚ö†Ô∏è Railway CLI –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...');
      execSync('npm install -g @railway/cli', { stdio: 'inherit' });
    }
    console.log('');
    
    // 2. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Railway
    console.log('2. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Railway...');
    console.log('   –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: robust-connection');
    console.log('   –¢–∏–ø: worker');
    console.log('');
    
    // 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    console.log('3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
    const environmentVariables = {
      TELEGRAM_BOT_TOKEN: '8198346055:AAG01qXWGBwP4qzDlkZztPwshDdYw_DLFN0',
      TELEGRAM_CHANNEL_ID: '@mymcptest',
      PEXELS_API_KEY: 'j0CGX7JRiZOmEz1bEYvxZeRn1cS7qdFy5351PmDtZ01Wnby18AIeWt32',
      YANDEX_CLIENT_ID: '11221f6ebd2d47649d42d9f4b282a876',
      YANDEX_CLIENT_SECRET: 'eb793370893544d683bf277d14bfd842',
      WORDPRESS_URL: 'https://kavkazoutdoor.ru',
      WORDPRESS_USERNAME: 'u3282220_Boris',
      WORDPRESS_APPLICATION_PASSWORD: 'cRM5 eqYh iYcm sFl6 Kvjb MoSj',
      PORT: '8080',
      NODE_ENV: 'production'
    };
    
    console.log('   –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
    Object.entries(environmentVariables).forEach(([key, value]) => {
      const displayValue = key.includes('PASSWORD') || key.includes('TOKEN') || key.includes('SECRET') 
        ? value.substring(0, 8) + '...' 
        : value;
      console.log(`   - ${key}: ${displayValue}`);
    });
    console.log('');
    
    // 4. –°–æ–∑–¥–∞–Ω–∏–µ railway.json –¥–ª—è worker
    console.log('4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Railway...');
    const railwayConfig = {
      "$schema": "https://railway.app/railway.schema.json",
      "build": {
        "builder": "NIXPACKS"
      },
      "deploy": {
        "startCommand": "npm start",
        "healthcheckPath": "/health",
        "healthcheckTimeout": 100,
        "restartPolicyType": "ON_FAILURE",
        "restartPolicyMaxRetries": 10
      }
    };
    
    fs.writeFileSync('railway.json', JSON.stringify(railwayConfig, null, 2));
    console.log('‚úÖ railway.json –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è worker');
    console.log('');
    
    // 5. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json –¥–ª—è production
    console.log('5. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json...');
    const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    packageJson.scripts = {
      ...packageJson.scripts,
      "start": "node dist/simple-server.js",
      "build": "tsc",
      "postinstall": "npm run build"
    };
    
    fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2));
    console.log('‚úÖ package.json –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è production');
    console.log('');
    
    // 6. –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
    console.log('6. –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π...');
    try {
      execSync('git add .', { stdio: 'inherit' });
      execSync('git commit -m "Configure for Railway deployment as worker"', { stdio: 'inherit' });
      execSync('git push origin main', { stdio: 'inherit' });
      console.log('‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub');
    } catch (error) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–º–º–∏—Ç–µ:', error.message);
    }
    console.log('');
    
    // 7. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–µ–ø–ª–æ—è
    console.log('7. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Railway:');
    console.log('');
    console.log('üìã –†—É—á–Ω–æ–π –¥–µ–ø–ª–æ–π:');
    console.log('1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://railway.app');
    console.log('2. –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ GitHub');
    console.log('3. –ù–∞–∂–º–∏—Ç–µ "New Project"');
    console.log('4. –í—ã–±–µ—Ä–∏—Ç–µ "Deploy from GitHub repo"');
    console.log('5. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: bobidk91-ops/telegram-mcp-server');
    console.log('6. –ù–∞–∑–æ–≤–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: robust-connection');
    console.log('7. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø: Worker');
    console.log('');
    console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
    console.log('–í Settings ‚Üí Variables –¥–æ–±–∞–≤—å—Ç–µ:');
    Object.entries(environmentVariables).forEach(([key, value]) => {
      console.log(`${key}=${value}`);
    });
    console.log('');
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ–ø–ª–æ—è:');
    console.log('- Start Command: npm start');
    console.log('- Health Check Path: /health');
    console.log('- Port: 8080');
    console.log('- Environment: production');
    console.log('');
    console.log('‚úÖ –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è —Å–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:');
    console.log('https://robust-connection-production.up.railway.app');
    console.log('');
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è:');
    console.log('curl https://robust-connection-production.up.railway.app/health');
    console.log('');
    
    // 8. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ø–ª–æ—è
    console.log('8. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞...');
    const testScript = `import axios from 'axios';

// –¢–µ—Å—Ç –¥–µ–ø–ª–æ—è –Ω–∞ Railway
async function testRailwayDeployment() {
  const baseURL = 'https://robust-connection-production.up.railway.app';
  
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–ø–ª–æ—è –Ω–∞ Railway...\\n');
  
  try {
    // 1. Health Check
    console.log('1. Health Check...');
    const healthResponse = await axios.get(\`\${baseURL}/health\`);
    console.log('‚úÖ Health Check:', healthResponse.data.status);
    console.log('   WordPress:', healthResponse.data.wordpress_enabled ? '–í–∫–ª—é—á–µ–Ω' : '–û—Ç–∫–ª—é—á–µ–Ω');
    console.log('   –í–µ—Ä—Å–∏—è:', healthResponse.data.version);
    console.log('');
    
    // 2. MCP Info
    console.log('2. MCP Info...');
    const mcpResponse = await axios.get(\`\${baseURL}/mcp\`);
    console.log('‚úÖ MCP Info –ø–æ–ª—É—á–µ–Ω–∞');
    console.log('   –ù–∞–∑–≤–∞–Ω–∏–µ:', mcpResponse.data.name);
    console.log('   –í–µ—Ä—Å–∏—è:', mcpResponse.data.version);
    console.log('');
    
    // 3. Tools List
    console.log('3. Tools List...');
    const toolsResponse = await axios.get(\`\${baseURL}/mcp/tools/list\`);
    console.log('‚úÖ Tools List –ø–æ–ª—É—á–µ–Ω');
    console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:', toolsResponse.data.tools.length);
    console.log('');
    
    // 4. WordPress Test
    console.log('4. WordPress Test...');
    const wpTestResponse = await axios.post(\`\${baseURL}/\`, {
      jsonrpc: '2.0',
      method: 'tools/call',
      params: {
        name: 'wordpress_test_connection',
        arguments: {}
      },
      id: 1
    });
    
    const wpTestResult = JSON.parse(wpTestResponse.data.result.content[0].text);
    console.log('‚úÖ WordPress Test:', wpTestResult.success ? '–£—Å–ø–µ—à–Ω–æ' : '–û—à–∏–±–∫–∞');
    if (wpTestResult.success) {
      console.log('   –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å KavkazOutdoor —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    }
    console.log('');
    
    console.log('üéâ –î–µ–ø–ª–æ–π –Ω–∞ Railway —É—Å–ø–µ—à–µ–Ω!');
    console.log('üåê –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –∞–¥—Ä–µ—Å—É:', baseURL);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    if (error.response) {
      console.error('üìä –°—Ç–∞—Ç—É—Å:', error.response.status);
      console.error('üìÑ –î–∞–Ω–Ω—ã–µ:', error.response.data);
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testRailwayDeployment();
`;

    fs.writeFileSync('test_railway_deployment.js', testScript);
    console.log('‚úÖ test_railway_deployment.js —Å–æ–∑–¥–∞–Ω');
    console.log('');
    
    console.log('üéâ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–ø–ª–æ—é –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('üìã –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ø–ª–æ—è –Ω–∞ Railway');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –¥–µ–ø–ª–æ—é:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –¥–µ–ø–ª–æ—é
deployToRailway();
